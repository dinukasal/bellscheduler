/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.dinuka.bellscheduler;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author User
 */
public class MP3SchedulerApp extends javax.swing.JFrame {

    private List<JSpinner> timeSpinners = new ArrayList<>();
    private List<JFileChooser> fileSelectors = new ArrayList<>();
    private JButton[] playButtons;
    private JButton scheduleButton;
    private JButton cancelAllButton;
    private Timer timer;

    /**
     * Creates new form MP3SchedulerApp
     */
    public MP3SchedulerApp() {
        setTitle("MP3 Scheduler");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(600, 400);

        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayout(0, 3));

        for (int i = 0; i < 12; i++) {
            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout());

            JSpinner timeSpinner = new JSpinner(new SpinnerDateModel());
            JSpinner.DateEditor timeEditor = new JSpinner.DateEditor(timeSpinner, "HH:mm:ss");
            timeSpinner.setEditor(timeEditor);
            timeSpinners.add(timeSpinner);
            panel.add(timeSpinner, BorderLayout.NORTH);

            JFileChooser fileChooser = new JFileChooser();
            fileSelectors.add(fileChooser);
            panel.add(fileChooser, BorderLayout.CENTER);

            JButton playButton = new JButton("Play");
            playButton.addActionListener(new PlayButtonListener(i));
            panel.add(playButton, BorderLayout.SOUTH);

            mainPanel.add(panel);
            initComponents();
        }

        scheduleButton = new JButton("Schedule");
        scheduleButton.addActionListener(new ScheduleButtonListener());
        cancelAllButton = new JButton("Cancel All");
        cancelAllButton.addActionListener(new CancelAllButtonListener());

        JPanel buttonPanel = new JPanel();
        buttonPanel.add(scheduleButton);
        buttonPanel.add(cancelAllButton);

        add(mainPanel, BorderLayout.CENTER);
        add(buttonPanel, BorderLayout.SOUTH);

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class PlayButtonListener implements ActionListener {

        private int index;

        public PlayButtonListener(int index) {
            this.index = index;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            // Add logic to play the selected MP3 file
        }
    }

    private class ScheduleButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            // Add logic to schedule tasks based on the selected time and file
        }
    }

    private class CancelAllButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            // Add logic to cancel all scheduled tasks
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MP3SchedulerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MP3SchedulerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MP3SchedulerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MP3SchedulerApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MP3SchedulerApp().setVisible(true);
//            }
//        });
        SwingUtilities.invokeLater(() -> new MP3SchedulerApp());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
